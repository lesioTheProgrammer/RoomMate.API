// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoomMate.Domain;

namespace RoomMate.Database.Migrations
{
    [DbContext(typeof(RoomMateContext))]
    [Migration("20191206141051_addedUserCode_userPasswordSalt")]
    partial class addedUserCode_userPasswordSalt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RoomMate.Database.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("CityId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("FlatNumber");

                    b.Property<string>("HouseNumber");

                    b.Property<int>("ModificatedBy");

                    b.Property<DateTime>("ModificatedDate");

                    b.Property<string>("Street");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("RoomMate.Database.Models.Flat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("Area");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("FlatAddressId");

                    b.Property<string>("FlatName");

                    b.Property<int>("ModificatedBy");

                    b.Property<DateTime>("ModificatedDate");

                    b.Property<int>("RoomCount");

                    b.HasKey("Id");

                    b.HasIndex("FlatAddressId");

                    b.ToTable("Flats");
                });

            modelBuilder.Entity("RoomMate.Database.Models.Housework", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<int>("FlatId");

                    b.Property<DateTime>("HouseWorkDate");

                    b.Property<int>("ModificatedBy");

                    b.Property<DateTime>("ModificatedDate");

                    b.Property<int>("UserId");

                    b.Property<int?>("WorkPriceId");

                    b.Property<int>("WorkType");

                    b.HasKey("Id");

                    b.HasIndex("FlatId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkPriceId")
                        .IsUnique()
                        .HasFilter("[WorkPriceId] IS NOT NULL");

                    b.ToTable("Houseworks");
                });

            modelBuilder.Entity("RoomMate.Database.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Login")
                        .IsRequired();

                    b.Property<int>("ModificatedBy");

                    b.Property<DateTime>("ModificatedDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("PasswordSalt");

                    b.Property<string>("Surname")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RoomMate.Database.Models.UserFlat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("FlatId");

                    b.Property<int>("ModificatedBy");

                    b.Property<DateTime>("ModificatedDate");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("FlatId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFlat");
                });

            modelBuilder.Entity("RoomMate.Database.Models.WorkPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("ModificatedBy");

                    b.Property<DateTime>("ModificatedDate");

                    b.Property<double>("Prices");

                    b.HasKey("Id");

                    b.ToTable("WorkPrices");
                });

            modelBuilder.Entity("RoomMate.Database.Models.WorkType", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Description")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("WorkType");
                });

            modelBuilder.Entity("RoomMate.Database.Models.Flat", b =>
                {
                    b.HasOne("RoomMate.Database.Models.Address", "FlatAddress")
                        .WithMany()
                        .HasForeignKey("FlatAddressId");
                });

            modelBuilder.Entity("RoomMate.Database.Models.Housework", b =>
                {
                    b.HasOne("RoomMate.Database.Models.Flat", "Flat")
                        .WithMany()
                        .HasForeignKey("FlatId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RoomMate.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RoomMate.Database.Models.WorkPrice", "WorkPrice")
                        .WithOne("Housework")
                        .HasForeignKey("RoomMate.Database.Models.Housework", "WorkPriceId");
                });

            modelBuilder.Entity("RoomMate.Database.Models.UserFlat", b =>
                {
                    b.HasOne("RoomMate.Database.Models.Flat", "Flat")
                        .WithMany("UserFlats")
                        .HasForeignKey("FlatId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RoomMate.Database.Models.User", "User")
                        .WithMany("UserFlats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
